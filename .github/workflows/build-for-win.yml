# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build for windows

on:
  push:
    tags:
      - v*
env:
  Platform: win
jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_FOR_WORKFLOWS }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}

  build:
    needs: create-release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9.6"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run PyInstaller
        run: |
          python -m PyInstaller main.spec
      - name: Get Version
        shell: powershell
        id: get_version
        run: |
          $VERSION=(echo "${{ github.ref }}" | Select-String -Pattern 'v+[0-9]+(\.[0-9]+)*' | % { $_.Matches }) | % { $_.Value }
          echo $VERSION
          Write-Output "version=$VERSION" >> $env:GITHUB_OUTPUT
      - name: Create Zip
        id: create_zip
        run: |
          ren dist ${{ steps.get_version.outputs.version }}
          $FILE_NAME=automated-redemption-for-$Platform.zip
          echo $FILE_NAME
          Write-Output "file_name=$FILE_NAME" >> $env:GITHUB_OUTPUT
          python -m zipfile -c $FILE_NAME ${{ steps.get_version.outputs.version }}
      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_FOR_WORKFLOWS }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ steps.create_zip.outputs.file_name }}
          asset_name: ${{ steps.create_zip.outputs.file_name }}
          asset_content_type: application/zip